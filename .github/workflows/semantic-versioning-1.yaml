name: Version Management

on:
  workflow_call:
    inputs:
      increment_type:
        description: 'Type of version increment (major, minor, patch) or "none" to use current version'
        required: true
        type: string
      version_file_path:
        description: 'Path to the version file'
        required: true
        type: string
    outputs:
      new_version:
        description: "The new or current version number."
        value: ${{ jobs.update_version.outputs.new_version }}

jobs:
  update_version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_output.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Read current version
        run: |
          echo "current_version=$(cat ${{ inputs.version_file_path }})" >> $GITHUB_ENV

      - name: Determine increment need based on branch and input
        id: set_output
        run: |
          if [[ "${{ github.ref }}" == 'refs/heads/main' ]] && [[ "${{ inputs.increment_type }}" != 'none' ]]; then
            IFS='.' read -ra VER <<< "$current_version"
            MAJOR=${VER[0]}
            MINOR=${VER[1]}
            PATCH=${VER[2]}
            
            case "${{ inputs.increment_type }}" in
              major)
                NEW_VERSION=$(($MAJOR + 1)).0.0
                ;;
              minor)
                NEW_VERSION=$MAJOR.$(($MINOR + 1)).0
                ;;
              patch)
                NEW_VERSION=$MAJOR.$MINOR.$(($PATCH + 1))
                ;;
            esac
            echo "version=$NEW_VERSION" >> $GITHUB_ENV
            echo "${NEW_VERSION}" > ${{ inputs.version_file_path }}
            echo "version=${NEW_VERSION}" >> $GITHUB_STEP_SUMMARY
            echo "version=${NEW_VERSION}" > $GITHUB_ENV
          else
            echo "version=$current_version" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Commit and push updated version file
        if: env.version && github.ref == 'refs/heads/main'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add ${{ inputs.version_file_path }}
          git commit -m "chore: update version to ${{ env.version }}"
          git push
