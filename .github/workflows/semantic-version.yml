name: Semantic Versioning

on:
  workflow_call:
    inputs:
      major:
        required: false
        type: boolean
      minor:
        required: false
        type: boolean
      patch:
        required: true
        type: boolean
      version_file_path:
        required: true
        type: string
    outputs:
      new_version:
        description: "The newly calculated semantic version"
        value: ${{ jobs.versioning.outputs.new_version }}
        
permissions:
  contents: write  # This allows the workflow to push changes
jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.calc_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Calculate new version
        id: calc_version
        run: |
          echo "Calculating new version based on inputs..."
          # Read only the last line from version.txt assuming it holds the version number
          VERSION=$(tail -n 1 ${{ inputs.version_file_path }})

          # Validate the version format
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format - $VERSION"
            exit 1
          fi

          IFS='.' read -ra ADDR <<< "$VERSION"

          # Increment version based on input flags
          if ${{ inputs.major }}; then
            let ADDR[0]+=1
            ADDR[1]=0
            ADDR[2]=0
          elif ${{ inputs.minor }}; then
            let ADDR[1]+=1
            ADDR[2]=0
          elif ${{ inputs.patch }}; then
            let ADDR[2]+=1
          fi

          NEW_VERSION="${ADDR[0]}.${ADDR[1]}.${ADDR[2]}"
          echo "New version: $NEW_VERSION"

          # Use GITHUB_OUTPUT to set the new version
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Update the version file, preserving the comment
          echo "# <MAJOR>.<MINOR>.<PATCH>" > ${{ inputs.version_file_path }}
          echo $NEW_VERSION >> ${{ inputs.version_file_path }}
        shell: bash

      - name: Commit new version
        run: |
          git config --global user.email "pacific.prashantdubey@gmail.com"
          git config --global user.name "${{ github.actor }}"
          git pull
          git add ${{ inputs.version_file_path }}
          git commit -m "Update version to ${{ steps.calc_version.outputs.version }}"
          git push
