name: Repository Creation Task

on: [push]
  #workflow_call:

jobs:
  create-repo:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: JFrog Setup
      id: setup-cli
      uses: jfrog/setup-jfrog-cli@v4.2.2
      env:
        JF_URL: ${{ vars.JF_URL }} # This should be the base URL of your Artifactory
      with:
        oidc-provider-name: github
        oidc-audience: my-aud

    - name: Extract Branch Name
      id: extract_branch
      run: |
        BRANCH_NAME=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Determine Repo Prefix
      id: determine_prefix
      run: |
        BRANCH_NAME=${{ env.BRANCH_NAME }}
        if [[ $BRANCH_NAME == feature/* ]]; then
          PREFIX="feature/"
        elif [[ $BRANCH_NAME == release/* ]]; then
          PREFIX="release/"
        elif [[ $BRANCH_NAME == bugfix/* ]]; then
          PREFIX="bugfix/"
        else
          echo "Unsupported branch type. Exiting."
          exit 1
        fi
        echo "REPO_PREFIX=$PREFIX" >> $GITHUB_ENV

    - name: Debug Information
      run: |
        echo "Branch Name: ${{ env.BRANCH_NAME }}"
        echo "Repo Prefix: ${{ env.REPO_PREFIX }}"

    - name: Create Repository
      run: |
        REPO_NAME="${{ env.REPO_PREFIX }}${{ env.BRANCH_NAME }}-repo"
        echo "Creating repository: $REPO_NAME"
        # Check if the repository already exists
        RESPONSE=$(jfrog rt curl -X GET /api/repositories/$REPO_NAME || true)
        if [ -z "$RESPONSE" ]; then
          # Create the repository if it does not exist
          jfrog rt repo-create --json='{"rclass": "local", "packageType": "maven", "repoLayoutRef": "maven-2-default"}' $REPO_NAME
        else
          echo "Repository $REPO_NAME already exists"
        fi
