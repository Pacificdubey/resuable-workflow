name: "Semantic Versioning"

on:
  workflow_call:
    
    outputs:
      new_version:
        description: "The newly generated semantic version"
        value: ${{ jobs.semantic-versioning.outputs.version }}
    secrets:
      custom_token:
        required: true  # Rename 'github_token' to 'custom_token' or similar
permissions:
  contents: write
  pull-requests: write
  issues: write
jobs:
  semantic-versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: Pacificdubey/resuable-workflow
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.3
        with:
         node-version: '20'  # Make sure this is 16 or higher

      - name: Install semantic-release
        run: npm install semantic-release@latest
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Fetch all history and tags
        run: git fetch --prune --unshallow || git fetch --prune

      - name: Ensure branch is up-to-date
        run: git reset --hard origin/${{ github.ref_name }}
        
      - name: Run Semantic Release and Set Output
        id: set_version
        run: |
          output=$(npx semantic-release)
          echo "Full log:"
          echo "$output"
          if echo "$output" | grep -q "Published release"; then
            version=$(echo "$output" | grep -oP 'Published release \K[^\s]+')
          elif echo "$output" | grep -q "Found git tag"; then
            version=$(echo "$output" | grep -oP 'Found git tag v[^\s]+ associated with version \K[^\s]+')
          else
            version=$(git describe --tags $(git rev-list --tags --max-count=1))
          fi
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "Detected Version: $version"
        #env:
         # GITHUB_TOKEN: ${{ secrets.custom_token }} 
