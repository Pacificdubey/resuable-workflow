name: Artifactory Cleanups

on:
  workflow_call:
    inputs:
      config_path:
        description: 'Optional path to the artifactory-cleanup configuration file'
        required: false
        type: string
        default: 'config/cleanup_config.yml'  # Default configuration path
      destroy:
        description: 'Flag to enable actual deletion of artifacts (true or false)'
        required: true
        type: string
    secrets:
        API_KEY:
          required: true
        USERNAME:
          required: true

jobs:
  cleanup-artifact:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: 'Pacificdubey/resuable-workflow'  # Specify the repository where the reusable workflow resides
          ref: 'main'  # Optional: specify the branch if needed
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Specify the Python version
      - run: ls -la

      - name: Install artifactory-cleanup
        run: python3 -mpip install artifactory-cleanup==1.0.0

      - name: Check installation
        run: artifactory-cleanup --help
      #- name: JFrog Setup
       # id: setup-cli
        #uses: jfrog/setup-jfrog-cli@v4.2.2
        #env:
         # JF_URL: ${{ vars.JF_URL }} # This should be the base URL of your Artifactory
        #with:
         # oidc-provider-name: gittest
          #oidc-audience: git-aud
      - name: Run Cleanup
        run: |
          # Conditional destruction based on input
          if [ "${{ inputs.destroy }}" == "true" ]; then
            artifactory-cleanup --config ${{ inputs.config_path }} --destroy
          fi
        env:
         ARTIFACTORY_USERNAME: ${{ secrets.USERNAME }}
         ARTIFACTORY_PASSWORD: ${{ secrets.API_KEY }}
